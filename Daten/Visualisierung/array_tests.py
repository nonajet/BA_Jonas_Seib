import os

import numpy as np
from sklearn.datasets import load_iris

from Daten.Visualisierung import extract_xml

a = np.arange(36).reshape(6, 6)

b = np.array([[0, 0, 0, 0, 0, 0],
              [0, 7, 8, 9, 10, 0],
              [0, 13, 14, 15, 16, 0],
              [1, 19, 20, 21, 22, 0],
              [1, 25, 26, 27, 28, 0],
              [1, 0, 0, 0, 0, 0]])

healthy = ['T0456863',
           'T0385225',
           'T0000053',
           'T0000057',
           'T0000068',
           'T0364879',
           'T0384399',
           'T0395309',
           'T0000012',
           'T0000013',
           'T0000077',
           'T0391053',
           'T0391057',
           'T0425192',
           'T0425194',
           'T0425195',
           'T0436931',
           'T0442296',
           'T0442298',
           'T0442300',
           'T0442301',
           'T0442302',
           'T0442303',
           'T0442305',
           'T0442307',
           'T0442310',
           'T0442313',
           'T0447557',
           'T0000055',
           'T0000058',
           'T0000072',
           'T0356393',
           'T0403495',
           'T0000051',
           'T0000052',
           'T0363586',
           'T0434890',
           'T0464405',
           'T0440571',
           'T0000061',
           'T0000076',
           'T0368816',
           'T0000027',
           'T0000034',
           'T0000045',
           'T0000050',
           'T0000074',
           'T0398726',
           'T0469563',
           'T0444457',
           'T0000016',
           'T0431145',
           'T0413132',
           'T0416528',
           'T0455992',
           'T0435498',
           'T0430357',
           'T0000033',
           'T0000062',
           'T0000084',
           'T0000086',
           'T0000087',
           'T0426424',
           'T0000066',
           'T0000014',
           'T0000056',
           'T0442068',
           'T0414480',
           'T0000035',
           'T0000070',
           'T0000029',
           'T0000067',
           'T0450107',
           'T0464570',
           'T0000038',
           'T0000001',
           'T0000002',
           'T0000004',
           'T0000005',
           'T0000007',
           'T0000008',
           'T0000010',
           'T0000011',
           'T0000017',
           'T0000018',
           'T0000020',
           'T0000021',
           'T0000022',
           'T0000023',
           'T0000030',
           'T0000037',
           'T0000039',
           'T0000040',
           'T0000041',
           'T0000044',
           'T0000049',
           'T0000063',
           'T0000064',
           'T0000078',
           'T0000079',
           'T0000080',
           'T0383729',
           'T0429136',
           'T0435822',
           'T0444173',
           'T0444378',
           'T0446201',
           'T0451236',
           'T0457775',
           'T0457776',
           'T0459229',
           'T0461395',
           'T0000069',
           'T0000046',
           'T0366543',
           'T0451120',
           'T0435291',
           'T0425819',
           'T0000081',
           'T0000085',
           'T0000073']
sick = ['T0457091',
        'T0000082',
        'T0000026',
        'T0454425',
        'T0457089',
        'T0000024',
        'T0307068',
        'T0457078',
        'T0459589',
        'T0461716',
        'T0451855',
        'T0457094',
        'T0436112',
        'T0453653',
        'T0000065',
        'T0398180',
        'T0425340',
        'T0447366',
        'T0456680',
        'T0457096',
        'T0000009',
        'T0401196',
        'T0448334',
        'T0468580',
        'T0470509',
        'T0439097',
        'T0000059',
        'T0000060',
        'T0000071',
        'T0434327',
        'T0451985',
        'T0446175',
        'T0406791',
        'T0456513',
        'T0456128',
        'T0335937',
        'T0451955',
        'T0412790',
        'T0450793',
        'T0000019',
        'T0000075',
        'T0463106',
        'T0328709',
        'T0449651',
        'T0460737',
        'T0356107',
        'T0405560',
        'T0455998',
        'T0458833',
        'T0458843',
        'T0459662',
        'T0460115',
        'T0457194',
        'T0463202',
        'T0450150',
        'T0459999',
        'T0390824',
        'T0000036',
        'T0410495',
        'T0461266',
        'T0463566',
        'T0403516',
        'T0432829',
        'T0457794',
        'T0464351',
        'T0464528',
        'T0000006',
        'T0452095',
        'T0468881',
        'T0458290',
        'T0414478',
        'T0467036',
        'T0456860',
        'T0000047',
        'T0000048',
        'T0356136',
        'T0379134',
        'T0406425',
        'T0407715',
        'T0408208',
        'T0443168',
        'T0448657',
        'T0454124',
        'T0456121',
        'T0456153',
        'T0458850',
        'T0460731',
        'T0461157',
        'T0462019',
        'T0463567',
        'T0463587',
        'T0464257',
        'T0454124',
        'T0410784',
        'T0462415',
        'T0461912',
        'T0456228',
        'T0457189',
        'T0376574',
        'T0450388',
        'T0000003',
        'T0000015',
        'T0000025',
        'T0000028',
        'T0000042',
        'T0000054',
        'T0325970',
        'T0375593',
        'T0376285',
        'T0379974',
        'T0390550',
        'T0399034',
        'T0426812',
        'T0442323',
        'T0444112',
        'T0445222',
        'T0451948',
        'T0454128',
        'T0454999',
        'T0455872',
        'T0455900',
        'T0455985',
        'T0455991',
        'T0456220',
        'T0456495',
        'T0456777',
        'T0456875',
        'T0457415',
        'T0457896',
        'T0458530',
        'T0458587',
        'T0458587',
        'T0459591',
        'T0459607',
        'T0459740',
        'T0460951',
        'T0461911',
        'T0462002',
        'T0463194',
        'T0463853',
        'T0463961',
        'T0466608',
        'T0467635',
        'T0000043',
        'T0452063',
        'T0461283',
        'T0419103',
        'T0457406',
        'T0460857',
        'T0318343',
        'T0400193',
        'T0455890',
        'T0460733',
        'T0316445',
        'T0458241',
        'T0321028',
        'T0457020',
        'T0458170',
        'T0461917',
        'T0458181',
        'T0461918',
        'T0458491',
        'T0458282',
        'T0448567',
        'T0456499',
        'T0457899',
        'T0000031',
        'T0456868',
        'T0451805',
        'T0269664',
        'T0455570',
        'T0455977',
        'T0457781',
        'T0000032',
        'T0358265',
        'T0358265',
        'T0000083',
        'T0424986']

if __name__ == '__main__':
    csv_file = r'C:\Users\jonas\OneDrive\Desktop\Studium_OvGU\WiSe23_24\BA\Daten\dog_features_data.csv'
    base_dir = r'C:\Users\jonas\OneDrive\Desktop\Studium_OvGU\WiSe23_24\BA\Daten\Rohdaten'
    id_in_folder = []
    unique = set()
    m_per_dog = dict()
    for f in os.listdir(base_dir):  # loop through all xml files from data
        f_path = os.path.join(base_dir, f)
        if os.path.isfile(f_path) and 'Trab' in f:
            measures = extract_xml.get_no_of_measures(f_path)  # no. of gaits per dog
            no = f.split(' ')[0]
            m_per_dog[no] = measures
            id_in_folder.append(no)
            unique.add(no)

    sick_ctr = 0
    sick_walks = 0
    healthy_ctr = 0
    healthy_walks = 0
    for i in id_in_folder:
        if i in sick:
            sick_ctr += 1
            sick_walks += m_per_dog[i]
        elif i in healthy:
            healthy_ctr += 1
            healthy_walks += m_per_dog[i]

    print('healthy:', healthy_ctr, 'with %i walks' % healthy_walks)
    print('sick:', sick_ctr, 'with %i walks' % sick_walks)
